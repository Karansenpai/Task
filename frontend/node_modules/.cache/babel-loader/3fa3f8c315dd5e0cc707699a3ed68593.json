{"ast":null,"code":"import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nconst backendURL = 'http://localhost:5000';\nexport const userLogin = createAsyncThunk('auth/login', async (_ref, _ref2) => {\n  let {\n    username,\n    password\n  } = _ref;\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    // configure header's Content-Type as JSON\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post(`${backendURL}/api/user/login`, {\n      username,\n      password\n    }, config);\n    console.log(data); // store user's token in local storage\n\n    localStorage.setItem('userToken', data.userToken);\n    return data;\n  } catch (error) {\n    // return custom error message from API if any\n    if (error.response && error.response.data.error_message) {\n      return rejectWithValue(error.response.data.error_message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});\nexport const registerUser = createAsyncThunk('user/register', async (_ref3, _ref4) => {\n  let {\n    firstName,\n    email,\n    password\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    await axios.post(`${backendURL}/api/user/register`, {\n      firstName,\n      email,\n      password\n    }, config);\n  } catch (error) {\n    if (error.response && error.response.data.message) {\n      return rejectWithValue(error.response.data.message);\n    } else {\n      return rejectWithValue(error.message);\n    }\n  }\n});","map":{"version":3,"names":["axios","createAsyncThunk","backendURL","userLogin","username","password","rejectWithValue","config","headers","data","post","console","log","localStorage","setItem","userToken","error","response","error_message","message","registerUser","firstName","email"],"sources":["/home/karan-senpai/Intern/task/React-Redux-Toolkit-Login-Register/frontend/src/features/auth/authActions.js"],"sourcesContent":["import axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\n\nconst backendURL = 'http://localhost:5000'\n\nexport const userLogin = createAsyncThunk(\n  'auth/login',\n  async ({ username, password }, { rejectWithValue }) => {\n    try {\n      // configure header's Content-Type as JSON\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n\n      const { data } = await axios.post(\n        `${backendURL}/api/user/login`,\n        { username, password },\n        config\n      )\n\n      console.log(data);\n\n      // store user's token in local storage\n      localStorage.setItem('userToken', data.userToken)\n\n      return data\n    } catch (error) {\n      // return custom error message from API if any\n      if (error.response && error.response.data.error_message) {\n        return rejectWithValue(error.response.data.error_message)\n      } else {\n        return rejectWithValue(error.message)\n      }\n    }\n  }\n)\n\nexport const registerUser = createAsyncThunk(\n  'user/register',\n  async ({ firstName, email, password }, { rejectWithValue }) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n\n      await axios.post(\n        `${backendURL}/api/user/register`,\n        { firstName, email, password },\n        config\n      )\n    } catch (error) {\n      if (error.response && error.response.data.message) {\n        return rejectWithValue(error.response.data.message)\n      } else {\n        return rejectWithValue(error.message)\n      }\n    }\n  }\n)\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEA,MAAMC,UAAU,GAAG,uBAAnB;AAEA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CACvC,YADuC,EAEvC,uBAAuD;EAAA,IAAhD;IAAEG,QAAF;IAAYC;EAAZ,CAAgD;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EACrD,IAAI;IACF;IACA,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMT,KAAK,CAACU,IAAN,CACpB,GAAER,UAAW,iBADO,EAErB;MAAEE,QAAF;MAAYC;IAAZ,CAFqB,EAGrBE,MAHqB,CAAvB;IAMAI,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAdE,CAgBF;;IACAI,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCL,IAAI,CAACM,SAAvC;IAEA,OAAON,IAAP;EACD,CApBD,CAoBE,OAAOO,KAAP,EAAc;IACd;IACA,IAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,aAA1C,EAAyD;MACvD,OAAOZ,eAAe,CAACU,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,aAArB,CAAtB;IACD,CAFD,MAEO;MACL,OAAOZ,eAAe,CAACU,KAAK,CAACG,OAAP,CAAtB;IACD;EACF;AACF,CA/BsC,CAAlC;AAkCP,OAAO,MAAMC,YAAY,GAAGnB,gBAAgB,CAC1C,eAD0C,EAE1C,wBAA+D;EAAA,IAAxD;IAAEoB,SAAF;IAAaC,KAAb;IAAoBjB;EAApB,CAAwD;EAAA,IAAxB;IAAEC;EAAF,CAAwB;;EAC7D,IAAI;IACF,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,gBAAgB;MADT;IADI,CAAf;IAMA,MAAMR,KAAK,CAACU,IAAN,CACH,GAAER,UAAW,oBADV,EAEJ;MAAEmB,SAAF;MAAaC,KAAb;MAAoBjB;IAApB,CAFI,EAGJE,MAHI,CAAN;EAKD,CAZD,CAYE,OAAOS,KAAP,EAAc;IACd,IAAIA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBU,OAA1C,EAAmD;MACjD,OAAOb,eAAe,CAACU,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBU,OAArB,CAAtB;IACD,CAFD,MAEO;MACL,OAAOb,eAAe,CAACU,KAAK,CAACG,OAAP,CAAtB;IACD;EACF;AACF,CAtByC,CAArC"},"metadata":{},"sourceType":"module"}