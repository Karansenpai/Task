{"ast":null,"code":"var _jsxFileName = \"/home/karan-senpai/Intern/task/React-Redux-Toolkit-Login-Register/frontend/src/routing/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = () => {\n  _s();\n\n  const {\n    userInfo\n  } = useSelector(state => state.auth); // show unauthorized screen if no user is found in redux store\n\n  if (!userInfo) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"unauthorized\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Unauthorized :(\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), \" to gain access\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProtectedRoute, \"tm9u9ATcYNEYVCp8P5F3TqiqzZ4=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useSelector","NavLink","Outlet","ProtectedRoute","userInfo","state","auth"],"sources":["/home/karan-senpai/Intern/task/React-Redux-Toolkit-Login-Register/frontend/src/routing/ProtectedRoute.js"],"sourcesContent":["import { useSelector } from 'react-redux'\nimport { NavLink, Outlet } from 'react-router-dom'\n\nconst ProtectedRoute = () => {\n  const { userInfo } = useSelector((state) => state.auth)\n\n  // show unauthorized screen if no user is found in redux store\n  if (!userInfo) {\n    return (\n      <div className='unauthorized'>\n        <h1>Unauthorized :(</h1>\n        <span>\n          <NavLink to='/login'>Login</NavLink> to gain access\n        </span>\n      </div>\n    )\n  }\n\n  return <Outlet />\n}\n\nexport default ProtectedRoute\n"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,kBAAhC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM;IAAEC;EAAF,IAAeJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAhC,CAD2B,CAG3B;;EACA,IAAI,CAACF,QAAL,EAAe;IACb,oBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE,QAAC,OAAD;UAAS,EAAE,EAAC,QAAZ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;EAED,oBAAO,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAhBD;;GAAMD,c;UACiBH,W;;;KADjBG,c;AAkBN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}